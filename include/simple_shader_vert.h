// header file generated by txt2h, 2003-2006 by ScottManDeath
#ifndef  TXT_HEADER_simple_vert_code
#define  TXT_HEADER_simple_vert_code


const char simple_vert_code [] =
"#version 120\n"
"\n"
"attribute vec3 vertex_position;\n"
"attribute vec3 vertex_normal;\n"
"varying vec3 fragmentColor;\n"
"\n"
"uniform mat4 MVP;\n"
"uniform vec3 COL;\n"
"\n"
"uniform vec3 FOG_COL;\n"
"uniform mat4 V;\n"
"uniform mat4 M;\n"
"uniform float FOG;\n"
"\n"
"float fog(float begin, float end);\n"
"\n"
"void main(){\n"
"  //Position du sommet, dans l'espace de dÃ©coupe : MVP * position\n"
"  gl_Position = MVP * vec4(vertex_position, 1);\n"
"\n"
"  vec3 col = COL;\n"
"\n"
"  if(FOG==1.0f){\n"
"    float f        = fog(2.5, 4.0);\n"
"    col            = (1-f)*FOG_COL + f*col;\n"
"  }\n"
"\n"
"  fragmentColor = col;\n"
"}\n"
"\n"
"\n"
"float fog(float begin, float end){\n"
"    float d   = length(( V * M * vec4(vertex_position,1)).xyz);\n"
"    float fac;\n"
"    //Linear\n"
"    //fac = (end - d)/(end - begin);\n"
"    //Exponential\n"
"    float FogDensity = 1.3;\n"
"    if(d>begin)\n"
"        fac = 1.0 /exp( ((d-begin) * FogDensity)* ((d-begin) * FogDensity));\n"
"    else\n"
"        fac = 1;\n"
"\n"
"    fac = clamp( fac, 0.0, 1.0 );\n"
"    return fac;\n"
"}\n"
;


#endif  // #ifdef TXT_HEADER_simple_vert_code
